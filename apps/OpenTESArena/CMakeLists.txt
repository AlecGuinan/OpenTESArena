PROJECT(TESArena CXX)

FIND_PACKAGE(OpenCL REQUIRED)
FIND_PACKAGE(SDL2 REQUIRED)
FIND_PACKAGE(OpenAL REQUIRED)
FIND_PACKAGE(WildMidi)

SET(EXTERNAL_LIBS ${OPENAL_LIBRARY} ${OpenCL_LIBRARIES} ${SDL2_LIBRARY})
INCLUDE_DIRECTORIES ("${CMAKE_SOURCE_DIR}" ${SDL2_INCLUDE_DIR} ${OpenCL_INCLUDE_DIRS} ${OPENAL_INCLUDE_DIR})
IF(WILDMIDI_FOUND)
    SET(EXTERNAL_LIBS ${EXTERNAL_LIBS} ${WILDMIDI_LIBRARIES})
    INCLUDE_DIRECTORIES(${WILDMIDI_INCLUDE_DIRS})
    ADD_DEFINITIONS("-DHAVE_WILDMIDI=1")
ELSE(WILDMIDI_FOUND)
    MESSAGE(STATUS "WildMidi not found, no MIDI support!")
ENDIF(WILDMIDI_FOUND)

FILE(GLOB_RECURSE TES_SOURCES 
    ${CMAKE_SOURCE_DIR}/OpenTESArena/src/*.h 
    ${CMAKE_SOURCE_DIR}/OpenTESArena/src/*.c 
    ${CMAKE_SOURCE_DIR}/OpenTESArena/src/*.hpp 
    ${CMAKE_SOURCE_DIR}/OpenTESArena/src/*.cpp)

IF (WIN32)
    LIST(APPEND TES_SOURCES ${CMAKE_SOURCE_DIR}/windows/opentesarena.rc)
    ADD_DEFINITIONS("-D_SCL_SECURE_NO_WARNINGS=1")
ENDIF()

ADD_EXECUTABLE (TESArena ${TES_SOURCES})
TARGET_LINK_LIBRARIES(TESArena components ${EXTERNAL_LIBS})
SET_TARGET_PROPERTIES(TESArena PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${OpenTESArena_BINARY_DIR})

SET_TARGET_PROPERTIES(TESArena PROPERTIES
	CXX_STANDARD 11
	CXX_STANDARD_REQUIRED ON
	CXX_EXTENSIONS ON
)
