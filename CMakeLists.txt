CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(OpenTESArena)

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/")

# Configure for GNU Compiler
IF (CMAKE_COMPILER_IS_GNUCC AND CMAKE_COMPILER_IS_GNUCXX)
    SET (CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} -std=c++1y)

    # To use std::thread and friends, we must pass -lpthread and -pthread to the compiler and Linker for GCC
    IF (NOT WIN32)
        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -lpthread -pthread")
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lpthread -pthread")
        SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -lpthread -pthread")
    ENDIF (NOT WIN32)
ENDIF (CMAKE_COMPILER_IS_GNUCC AND CMAKE_COMPILER_IS_GNUCXX)

FIND_PACKAGE(FMod REQUIRED)
FIND_PACKAGE(SDL REQUIRED)
FIND_PACKAGE(OpenCL REQUIRED)

FILE(GLOB_RECURSE TES_INCLUDES "OpenTESArena/src/*.h")
FILE(GLOB_RECURSE TES_SOURCES "OpenTESArena/src/*.cpp")

MESSAGE(INFO ${SDL_LIBRARY})
ADD_EXECUTABLE (TESArena ${TES_INCLUDES} ${TES_SOURCES})
INCLUDE_DIRECTORIES (${FMOD_INCLUDE_DIRS} "/usr/include" ${SDL_INCLUDE_DIR} ${OpenCL_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES(TESArena ${SDL_LIBRARY} ${FMOD_LIBRARY} ${OpenCL_LIBRARIES} SDL2 /usr/lib/x86_64-linux-gnu/libSDL2_image.so)
