CMAKE_MINIMUM_REQUIRED(VERSION 3.6)
PROJECT(OpenTESArena)

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/")

# Configure for GNU Compiler
IF (CMAKE_COMPILER_IS_GNUCC AND CMAKE_COMPILER_IS_GNUCXX)
    SET (CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} -std=c++11)

    # To use std::thread and friends, we must pass -lpthread and -pthread to the compiler and Linker for GCC
    IF (NOT WIN32)
        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -lpthread -pthread")
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lpthread -pthread")
        SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -lpthread -pthread")
    ENDIF (NOT WIN32)
ENDIF (CMAKE_COMPILER_IS_GNUCC AND CMAKE_COMPILER_IS_GNUCXX)

FIND_PACKAGE(FMod REQUIRED)
FIND_PACKAGE(OpenCL REQUIRED)
FIND_PACKAGE(SDL2 REQUIRED)

FILE(GLOB_RECURSE TES_INCLUDES "OpenTESArena/src/*.h")
FILE(GLOB_RECURSE TES_SOURCES "OpenTESArena/src/*.cpp")

ADD_EXECUTABLE (TESArena ${TES_INCLUDES} ${TES_SOURCES})
INCLUDE_DIRECTORIES (${FMOD_INCLUDE_DIRS} ${SDL2_INCLUDE_DIR} ${OpenCL_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES(TESArena ${FMOD_LIBRARY} ${OpenCL_LIBRARIES} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARY})
